---
import CopyIcon from '@/assets/icons/CopyIcon.astro';

// ----------- props ----------- //
interface Props {
  href?: string;
  text?: string;
  hasCopy?: boolean;
  clear?: boolean;
  className?: string;
}

const { text, href, hasCopy, clear, className = '' } = Astro.props;
---

<span
  class={clear
    ? className
    : 'relative inline-flex items-center gap-2 hover:scale-105 transition-all duration-300 border border-accent hover:bg-accent/20 bg-ease-in-out transform/20 hover:shadow-lg rounded-full px-2 py-1'}
>
  <a
    href={href}
    target="_blank"
    rel="noopener noreferrer"
    class="flex items-center gap-2 text-sm"
  >
    <slot />{text}
  </a>
  {
    hasCopy && (
      <button
        class={
          clear
            ? 'copy-button border-l border-main/30 pl-2 stroke-main text-main text-sm'
            : 'copy-button border-l border-accent pl-2 stroke-main text-main text-sm'
        }
        data-text={text}
      >
        <CopyIcon class="size-5" />
      </button>
    )
  }
</span>

<script is:inline>
  if (!window.copyButtonsInitialized) {
    window.copyButtonsInitialized = true;

    const copy = (button) => {
      button.addEventListener('click', () => {
        const textToCopy = button.getAttribute('data-text');
        if (textToCopy) {
          navigator.clipboard.writeText(textToCopy);
          const content = button.innerHTML;
          button.textContent = 'Â¡Copiado!';
          setTimeout(() => {
            button.innerHTML = content;
          }, 5000);
        }
      });
    };

    const setupCopyButton = () => {
      const copyButtons = document.querySelectorAll('.copy-button');
      copyButtons.forEach((button) => copy(button));
    };

    document.addEventListener('astro:page-load', setupCopyButton);
  }
</script>
