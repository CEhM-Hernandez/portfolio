---
// ----------- components ----------- //
import ThemeIcon from '@icons/ThemeIcon.astro';
---

<button
  id="theme-button"
  class="flex items-center justify-center h-12 w-12 md:min-h-10 md:min-w-10 rounded-full border border-main/90 bg-background text-center hover:rotate-180 hover:scale-105 hover:border-accent hover:text-accent dark:hover:border-yellow-500 dark:hover:text-yellow-500 transition-transform duration-300 ease-in-out"
>
  <span class="sr-only"></span>
  <ThemeIcon />
</button>

<script is:inline>
  const getThemePreferences = () => {
    return (
      localStorage.getItem('theme') ||
      (window.matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'light')
    );
  };

  const applyTheme = () => {
    const isDark = getThemePreferences() === 'dark';
    document.documentElement.classList.toggle('dark', isDark);
    updateButtonLabel(isDark);
  };

  const updateButtonLabel = (isDark) => {
    const srOnlyElement = document.querySelector('span.sr-only');
    if (srOnlyElement)
      srOnlyElement.textContent = isDark
        ? 'Cambiar a tema claro'
        : 'Cambiar a tema oscuro';
  };

  const toggleTheme = () => {
    const isDark = document.documentElement.classList.contains('dark');
    document.documentElement.classList.toggle('dark', !isDark);
    localStorage.setItem('theme', isDark ? 'light' : 'dark');
    updateButtonLabel(!isDark);
  };

  const setupThemeButton = () => {
    applyTheme();
    const button = document.getElementById('theme-button');
    if (button && !button.dataset.initialized) {
      button.addEventListener('click', toggleTheme);
      button.dataset.initialized = 'true';
    }
  };

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupThemeButton);
  }

  document.addEventListener('astro:after-swap', setupThemeButton);
</script>
